
Private bittorrent community application. It is built with the Ruby language and
the Padrino framework. It is supposed to be used along with its sidekick tracker
application: .

- screenshots
  + http://img691.imageshack.us/img691/6655/envi.png
  + http://img683.imageshack.us/img683/3382/torrentsq.png
  + http://img137.imageshack.us/img137/1528/torrentdetails.png
  + http://img444.imageshack.us/img444/1733/uploadjv.png
  + http://img713.imageshack.us/img713/9972/types.png
  + http://img230.imageshack.us/img230/5690/profilecg.png
  + http://img651.imageshack.us/img651/1641/tasksz.png
  + http://img690.imageshack.us/img690/9110/announcelogs.png  

- licence: see doc/MIT_LICENCE

- components:
  + framework: padrino
  + orm: activerecord
  + database: mysql
  + script: jquery, jquery-ujs
  + renderer: erb
  + test: rspec, cucumber, capybara
  + search engine: mysql fulltext indexation
  + pagination: will_paginate (modified)

- run in development:
  $ git clone
  $ cd mukif  
  $ bundle install  
  $ padrino rake app_custom_files:generate
  + set your database settings in 'config/database.rb'
  $ padrino rake ar:create
  $ padrino rake ar:migrate
  $ padrino rake seed    
  $ padrino start 
  + open http://localhost:3000
  + login with system/system or owner/owner
  
- run the tests
  $ padrino rake ar:create -e test
  $ padrino rake ar:migrate -e test
  $ spec spec -c -f n
  $ cucumber features -f pretty  

- deploy to a remote server: see 'deploy/README'

- custom files
  - app_root
    - config
      + bg_tasks.yml        + background tasks config
      + database.rb         + database connection config
      + mukif.yml           + core app config
      + schedule.rb         + whenever gem scheduling
      + auth_keys           + authentication encryption keys
    - db
      - seeds
        + app_data.rb         + app initial data seeds, like types, roles and so on
        + dummy_data.rb       + app dummy data for development purposes
    - deploy    
      + backup.rb           + capistrano recipes for backup
      + deploy.rb           + capistrano recipes for deployment
      + install.rb          + sprinkle recipes for installing server software
      + prepare.rb          + capistrano recipes for pre-deployment preparation

- features: see 'features/' dir

- worth noting
  + mysql database is required as app uses specific data types and features
  + some configuration parameters are stored in the database so they can be changed 
    without restarting the app (see 'db/seeds/app_default_data.rb')
  + all app data is stored in the database, including the torrent files data
  + the bittorrent related implementations are based in the specification found at: 
    http://wiki.theory.org/BitTorrentSpecification
  + app debug messages begin with emoticons:
    :-) - ok
    :-o - out of ordinary, but most likely is the user's fault
    :-( - unexpected error  



